{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojisWeKnow","Object","keys","App","useState","meaning","setMeaning","className","onChange","event","userInput","target","value","undefined","map","emoji","onClick","emojiClickHandler","style","fontSize","padding","cursor","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4KAGIA,EAAkB,CACpB,eAAM,UACN,eAAM,UACN,eAAM,+BACN,eAAM,aACN,eAAM,OACN,eAAM,iBACN,eAAM,eACN,eAAM,yBACN,eAAM,QACN,eAAM,sBAGJC,EAAeC,OAAOC,KAAKH,GAEhB,SAASI,IACtB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAoBA,OACE,sBAAKC,UAAU,MAAf,UACE,+CAEA,uBAAOC,SArBX,SAA2BC,GACzB,IAAIC,EAAYD,EAAME,OAAOC,MAEzBP,EAAUN,EAAgBW,QAGdG,IAAZR,IACFA,EAAU,qCAEZC,EAAWD,MAcT,mCAAMA,EAAN,OAGA,gDACCL,EAAac,KAAI,SAAUC,GAE1B,OACE,sBACEC,QAAS,kBAnBnB,SAA2BD,GAEzBT,EADcP,EAAgBgB,IAkBPE,CAAkBF,IACjCG,MAAO,CAAEC,SAAU,OAAQC,QAAS,SAAUC,OAAQ,WAFxD,SAKGN,GAFIA,SClDjB,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACvB,EAAD,MAEFmB,I","file":"static/js/main.105f02f6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nvar emojiDictionary = {\n  \"üòä\": \"Smiling\",\n  \"üòâ\": \"Winking\",\n  \"üòç\": \"Smiling face with heart eyes\",\n  \"ü§©\": \"star-stuck\",\n  \"üíñ\": \"love\",\n  \"üò∑\": \"face with mask\",\n  \"ü§ó\": \"hugging face\",\n  \"üôÑ\": \"face with rolling eyes\",\n  \"üçï\": \"pizza\",\n  \"üçó\": \"Chicken leg piece \"\n};\n\nvar emojisWeKnow = Object.keys(emojiDictionary); //4.we mar mapping emoji dictionary with emojisweknow using object key\n\nexport default function App() {\n  const [meaning, setMeaning] = useState(\"\");\n  //meaning is defined here\n\n  function emojiInputHandler(event) {\n    var userInput = event.target.value;\n\n    var meaning = emojiDictionary[userInput];\n    //2.meaning from emoji dictionary(processing) based on input from user(input)\n    // console.log(meaning);\n    if (meaning === undefined) {\n      meaning = \"we dont have this in our database\";\n    }\n    setMeaning(meaning);\n  }\n\n  function emojiClickHandler(emoji) {\n    var meaning = emojiDictionary[emoji];\n    setMeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Emoji Decoder</h1>\n\n      <input onChange={emojiInputHandler} />\n      {/* 1.when user puts in value */}\n      <h2> {meaning} </h2>\n      {/* output based on function from 2 */}\n\n      <h3>Emojis we know</h3>\n      {emojisWeKnow.map(function (emoji) {\n        //mapping emoji with emojisweknow(point4) to get(return) emoji list\n        return (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n            key={emoji}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}